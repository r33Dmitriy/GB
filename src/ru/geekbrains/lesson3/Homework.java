package ru.geekbrains.lesson3;

import org.w3c.dom.ls.LSOutput;

import java.util.Random;

/**
 1. Расширить задачу про котов и тарелки с едой
 2. Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот пытается покушать 15-20)
 3. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true
 4. Считаем, что если коту мало еды в тарелке, то он ее просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы)
 5. Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль
 6. Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку
 */

public class Homework
{

    public static void main(String[] args)
    {
        Cat cat = new Cat("Sonya", 5);
        Pipkin pipkin = new Pipkin(20);
        pipkin.info(); // инфо по миске в начале
        cat.eat(pipkin); // кормим кошку
        pipkin.info(); // смотрим сколько осталось в миске
        cat.eat(pipkin); // пытаемся покормить сытую кошку
        pipkin.info(); //проверяем, что корм не пропал
        pipkin.pourFood(10); // насыпаем корма в миску
        Cat[] cats = new Cat[5]; //создаем массив котов
        cats[0] = new Cat("Silka", 5);
        cats[1] = new Cat("Rosa", 3);
        cats[2] = new Cat("Masya", 7);
        cats[3] = new Cat("Milla", 12);
        cats[4] = new Cat("Elya", 9);
        System.out.println("Кормим кошек");
        for (int i = 0; i < cats.length; i++) //кормим кошек через цикл
        {
            cats[i].eat(pipkin);
        }
        System.out.println("Насыпаем корма в миску и снова кормим кошек");
        pipkin.pourFood(20);
        for (int i = 0; i < cats.length; i++) //кормим кошек через цикл
        {
            cats[i].eat(pipkin);
        }
    }

}
